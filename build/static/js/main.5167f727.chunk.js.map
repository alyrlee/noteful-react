{"version":3,"sources":["config.js","CircleButton/CircleButton.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","NotefulForm/NotefulForm.js","notefulContext.js","Validation Error.js","AddFolder/AddFolder.js","ErrorHandler.js","App/App.js","index.js"],"names":["module","exports","PORT","process","NODE_ENV","API_TOKEN","API_ENDPOINT","NavCircleButton","props","tag","className","childrenm","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","children","defaultProps","countNotesForFolder","notes","arguments","length","undefined","folderId","filter","note","NoteListNav","react_default","a","folders","map","folder","key","id","NavLink","to","concat","name","Link","type","react_fontawesome_index_es","icon","NotePageNav","role","onClick","history","goBack","Note","format","modified","NoteListMain","Note_Note","NotePageMain","content","split","para","i","NotefulForm","assign","action","createContext","addFolder","addNote","deleteNote","ValidationError","message","Fragment","AddFolder","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateFolderName","setState","validateName","folderName","errorInfo","state","validationMessages","hasError","trim","validName","validateForm","validForm","handleSubmit","e","preventDefault","folder_name","target","value","fetch","config","method","headers","content-type","body","JSON","stringify","then","res","ok","json","Promise","reject","context","push","catch","err","alert","_this2","NotefulForm_NotefulForm","onSubmit","htmlFor","onChange","disabled","Component","contextType","notefulContext","ErrorHandler","error","console","log","REACT_APP_API_KEY","App","handleDeleteNote","handleAddNote","addedNote","toConsumableArray","handleAddFolder","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","path","Route","exact","component","AddNote","ErrorHandler_ErrorHandler","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App","document","getElementById"],"mappings":"0EAAAA,EAAOC,QAAU,CACfC,KAAMC,8CAAYD,MAAQ,IAC1BE,SAAUD,aACVE,UAAWF,8CAAYE,WAAa,uCACpCC,aAAaH,8CAAYG,cAAgB,qZCD5B,SAASC,EAAgBC,GACeA,EAA7CC,IAA6CD,EAAxCE,UAAwCF,EAA7BG,UADqB,IACPC,EADOC,OAAAC,EAAA,EAAAD,CACQL,EADR,iCAG7C,OAAOO,IAAMC,cACXR,EAAMC,IADDI,OAAAI,EAAA,EAAAJ,CAAA,CAGHH,UAAW,CAAC,kBAAmBF,EAAME,WAAWQ,KAAK,MAClDN,GAELJ,EAAMW,UAIVZ,EAAgBa,aAAc,CAC5BX,IAAK,KChBA,IAYMY,EAAsB,eAACC,EAADC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAO,GAAIG,EAAXH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OACjCH,EAAMK,OAAO,SAAAC,GAAI,OAAIA,EAAKF,WAAaA,IAAUF,cCPpC,SAASK,EAAYrB,GAClC,OACEsB,EAAAC,EAAAf,cAAA,OAAKN,UAAU,eACboB,EAAAC,EAAAf,cAAA,MAAIN,UAAU,qBACXF,EAAMwB,QAAQC,IAAI,SAAAC,GAAM,OACvBJ,EAAAC,EAAAf,cAAA,MAAImB,IAAKD,EAAOE,IACdN,EAAAC,EAAAf,cAACqB,EAAA,EAAD,CACE3B,UAAU,2BACV4B,GAAE,WAAAC,OAAaL,EAAOE,KAEtBN,EAAAC,EAAAf,cAAA,QAAMN,UAAU,0BACbW,EAAoBb,EAAMc,MAAOY,EAAOE,KAE1CF,EAAOM,UAKhBV,EAAAC,EAAAf,cAAA,OAAKN,UAAU,+BACboB,EAAAC,EAAAf,cAACT,EAAD,CACEE,IAAKgC,IACLH,GAAG,cACHI,KAAK,SACLhC,UAAU,kCAEVoB,EAAAC,EAAAf,cAAC2B,EAAA,EAAD,CAAiBC,KAAK,SACtBd,EAAAC,EAAAf,cAAA,WAPF,YAeRa,EAAYT,aAAe,CACzBY,QAAS,UCrCI,SAASa,EAAYrC,GAClC,OACEsB,EAAAC,EAAAf,cAAA,OAAKN,UAAU,eACboB,EAAAC,EAAAf,cAACT,EAAD,CACEE,IAAI,SACJqC,KAAK,OACLC,QAAS,kBAAMvC,EAAMwC,QAAQC,UAC7BvC,UAAU,4BAEVoB,EAAAC,EAAAf,cAAC2B,EAAA,EAAD,CAAiBC,KAAK,iBACtBd,EAAAC,EAAAf,cAAA,WAPF,QAUCR,EAAM0B,QACLJ,EAAAC,EAAAf,cAAA,MAAIN,UAAU,4BACXF,EAAM0B,OAAOM,OAOxBK,EAAYzB,aAAe,CACzB4B,QAAS,CACPC,OAAQ,kCCvBG,SAASC,EAAK1C,GAC3B,OACEsB,EAAAC,EAAAf,cAAA,OAAKN,UAAU,QACboB,EAAAC,EAAAf,cAAA,MAAIN,UAAU,eACZoB,EAAAC,EAAAf,cAACyB,EAAA,EAAD,CAAMH,GAAE,SAAAC,OAAW/B,EAAM4B,KACtB5B,EAAMgC,OAGXV,EAAAC,EAAAf,cAAA,UAAQN,UAAU,eAAegC,KAAK,UACpCZ,EAAAC,EAAAf,cAAC2B,EAAA,EAAD,CAAiBC,KAAK,cACrB,IAFH,UAKAd,EAAAC,EAAAf,cAAA,OAAKN,UAAU,eACboB,EAAAC,EAAAf,cAAA,OAAKN,UAAU,wBAAf,WAEG,IACDoB,EAAAC,EAAAf,cAAA,QAAMN,UAAU,QACbyC,iBAAO3C,EAAM4C,SAAU,0BCjBrB,SAASC,EAAa7C,GACnC,OACEsB,EAAAC,EAAAf,cAAA,WAASN,UAAU,gBACjBoB,EAAAC,EAAAf,cAAA,UACGR,EAAMc,MAAMW,IAAI,SAAAL,GAAI,OACnBE,EAAAC,EAAAf,cAAA,MAAImB,IAAKP,EAAKQ,IACZN,EAAAC,EAAAf,cAACsC,EAAD,CACElB,GAAIR,EAAKQ,GACTI,KAAMZ,EAAKY,KACXY,SAAUxB,EAAKwB,eAKvBtB,EAAAC,EAAAf,cAAA,OAAKN,UAAU,kCACboB,EAAAC,EAAAf,cAACT,EAAD,CACEE,IAAKgC,IACLH,GAAG,YACHI,KAAK,SACLhC,UAAU,iCAEVoB,EAAAC,EAAAf,cAAC2B,EAAA,EAAD,CAAiBC,KAAK,SACtBd,EAAAC,EAAAf,cAAA,WAPF,UAeRqC,EAAajC,aAAe,CAC1BE,MAAO,WClCM,SAASiC,EAAa/C,GACnC,OACEsB,EAAAC,EAAAf,cAAA,WAASN,UAAU,gBACjBoB,EAAAC,EAAAf,cAACsC,EAAD,CACElB,GAAI5B,EAAMoB,KAAKQ,GACfI,KAAMhC,EAAMoB,KAAKY,KACjBY,SAAU5C,EAAMoB,KAAKwB,WAEvBtB,EAAAC,EAAAf,cAAA,OAAKN,UAAU,yBACZF,EAAMoB,KAAK4B,QAAQC,MAAM,YAAYxB,IAAI,SAACyB,EAAMC,GAAP,OACxC7B,EAAAC,EAAAf,cAAA,KAAGmB,IAAKwB,GAAID,OAOtBH,EAAanC,aAAe,CAC1BQ,KAAM,CACJ4B,QAAS,YCpBE,SAASI,EAAYpD,GAAO,IACjCE,EAA6BF,EAA7BE,UAAcE,EADmBC,OAAAC,EAAA,EAAAD,CACJL,EADI,eAEzC,OACEsB,EAAAC,EAAAf,cAAA,OAAAH,OAAAgD,OAAA,CACEnD,UAAW,CAAC,eAAgBA,GAAWQ,KAAK,KAC5C4C,OAAO,KACHlD,ICPKG,UAAMgD,cAAc,CAC/BzC,MAAO,GACPU,QAAS,GACTgC,UAAW,aACXC,QAAS,aACTC,WAAY,gCCLD,SAASC,EAAgB3D,GACtC,OAAIA,EAAM4D,QAENtC,EAAAC,EAAAf,cAAA,OAAKN,UAAU,SACdF,EAAM4D,SAMTtC,EAAAC,EAAAf,cAAAc,EAAAC,EAAAsC,SAAA,iBCLiBC,cAOjB,SAAAA,EAAY9D,GAAO,IAAA+D,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,KAAAH,IAChBC,EAAA1D,OAAA6D,EAAA,EAAA7D,CAAA4D,KAAA5D,OAAA8D,EAAA,EAAA9D,CAAAyD,GAAAM,KAAAH,KAAMjE,KAaVqE,iBAAmB,SAACrC,GAChB+B,EAAKO,SAAS,CAACtC,QAAO,WAAO+B,EAAKQ,aAAavC,MAf/B+B,EAkBpBQ,aAAe,SAACC,GACf,IAAMC,EAASpE,OAAAI,EAAA,EAAAJ,CAAA,GAAO0D,EAAKW,MAAMC,oBAC7BC,GAAW,EAGe,KAD9BJ,EAAaA,EAAWK,QACL7D,QACfyD,EAAUzC,KAAO,sCACjB4C,GAAW,GAGHJ,EAAWxD,OAAS,GACpByD,EAAUzC,KAAO,0DACjB4C,GAAW,IAGXH,EAAUzC,KAAO,GACjB4C,GAAW,GAInBb,EAAKO,SAAS,CACVK,mBAAoBF,EACpBK,WAAYF,GAEZb,EAAKgB,eA1CMhB,EA6CnBgB,aAAe,WACXhB,EAAKO,SAAS,CACVU,UAAWjB,EAAKW,MAAMI,aA/CXf,EAmDnBkB,aAAe,SAAAC,GACXA,EAAEC,iBAEF,IAAMzD,EAAS,CACX0D,YAAaF,EAAEG,OAAO,qBAAqBC,OAG/CC,MAAK,GAAAxD,OAAIyD,IAAO1F,aAAX,YAAmC,CACpC2F,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUpE,KAExBqE,KAAM,SAAAC,GACH,OAAKA,EAAIC,GAGFD,EAAIE,OAFAF,EAAIE,OAAOH,KAAK,SAAAb,GAAC,OAAIiB,QAAQC,OAAOlB,OAIlDa,KAAM,SAAArE,GACHqC,EAAKsC,QAAQ7C,UAAU9B,GACvBqC,EAAK/D,MAAMwC,QAAQ8D,KAAnB,YAAAvE,OAAoCL,EAAOE,OAE9C2E,MAAO,SAAAC,GAAG,OAAIC,MAAMD,MAzEtBzC,EAAKW,MAAQ,CACT1C,KAAM,GACN8C,WAAW,EACXE,WAAW,EACXL,mBAAoB,CAChB3C,KAAM,KAPE+B,wEA+ET,IAAA2C,EAAAzC,KACN,OACY3C,EAAAC,EAAAf,cAAA,WAASN,UAAU,aACfoB,EAAAC,EAAAf,cAAA,kCAIAc,EAAAC,EAAAf,cAACmG,EAAD,CAAaC,SAAU3C,KAAKgB,cAExB3D,EAAAC,EAAAf,cAAA,OAAKN,UAAU,SAEXoB,EAAAC,EAAAf,cAAA,SAAOqG,QAAQ,qBAAf,QAIAvF,EAAAC,EAAAf,cAAA,SAAO0B,KAAK,OAAON,GAAG,oBAAoBkF,SAAU,SAAA5B,GAAC,OAAIwB,EAAKrC,iBAAiBa,EAAEG,OAAOC,UACxFhE,EAAAC,EAAAf,cAACmD,EAAD,CAAiBiB,UAAWX,KAAKS,MAAMI,UAAWlB,QAASK,KAAKS,MAAMC,mBAAmB3C,QAI7FV,EAAAC,EAAAf,cAAA,OAAKN,UAAU,WAEXoB,EAAAC,EAAAf,cAAA,UAAQ0B,KAAK,SAAS6E,UAAW9C,KAAKS,MAAMM,WAA5C,wBA5GOgC,aAAlBlD,EACXlD,aAAe,CAClB4B,QAAS,CACL8D,KAAM,eAHIxC,EAmBXmD,YAAcC,MCxBHC,cACjB,SAAAA,EAAYnH,GAAO,IAAA+D,EAAA,OAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,KAAAkD,IACfpD,EAAA1D,OAAA6D,EAAA,EAAA7D,CAAA4D,KAAA5D,OAAA8D,EAAA,EAAA9D,CAAA8G,GAAA/C,KAAAH,KAAMjE,KACD0E,MAAQ,CACTE,UAAU,GAHCb,wEAYf,OAAIE,KAAKS,MAAME,SAEPtD,EAAAC,EAAAf,cAAA,QAAMN,UAAU,cACZoB,EAAAC,EAAAf,cAAA,sEAMLyD,KAAKjE,MAAMW,4DAdUyG,GAC5B,MAAO,CAACxC,UAAU,UATgBoC,oBCc1CK,QAAQC,IAAI3H,8CAAY4H,uBAoIPC,6MAlIb9C,MAAQ,CACN5D,MAAO,GACPU,QAAS,MAyBXiG,iBAAmB,SAAA7F,GACjBmC,EAAKO,SAAS,CACZxD,MAAOiD,EAAKW,MAAM5D,MAAMK,OAAO,SAAAC,GAAI,OAAIA,EAAKQ,KAAOA,SAIvD8F,cAAgB,SAACC,GACf5D,EAAKO,SAAS,CACZxD,MAAMT,OAAAuH,EAAA,EAAAvH,CACD0D,EAAKW,MAAM5D,OADXiB,OAAA,CAEH4F,SAKNE,gBAAkB,SAACnG,GACjBqC,EAAKO,SAAS,CACZ9C,QAAQnB,OAAAuH,EAAA,EAAAvH,CACH0D,EAAKW,MAAMlD,SADTO,OAAA,CAELL,0FAzCc,IAAAgF,EAAAzC,KAClBkC,QAAQ2B,IAAI,CACVvC,MAAK,GAAAxD,OAAIyD,IAAO1F,aAAX,WACLyF,MAAK,GAAAxD,OAAIyD,IAAO1F,aAAX,eAENiG,KAAK,SAAAgC,GAA4B,IAAAC,EAAA3H,OAAA4H,EAAA,EAAA5H,CAAA0H,EAAA,GAA1BG,EAA0BF,EAAA,GAAhBG,EAAgBH,EAAA,GAChC,OAAKE,EAASjC,GAGTkC,EAAWlC,GAGTE,QAAQ2B,IAAI,CAACI,EAAShC,OAAQiC,EAAWjC,SAFvCiC,EAAWjC,OAAOH,KAAK,SAAAb,GAAC,OAAIiB,QAAQC,OAAOlB,KAH3CgD,EAAShC,OAAOH,KAAK,SAAAb,GAAC,OAAIiB,QAAQC,OAAOlB,OAOnDa,KAAK,SAAAqC,GAAsB,IAAAC,EAAAhI,OAAA4H,EAAA,EAAA5H,CAAA+H,EAAA,GAApBtH,EAAoBuH,EAAA,GAAb7G,EAAa6G,EAAA,GAC1B3B,EAAKpC,SAAS,CAACxD,QAAOU,cAEvB+E,MAAM,SAAAa,GACLC,QAAQD,MAAM,CAACA,sDA6BjB,OACI9F,EAAAC,EAAAf,cAAAc,EAAAC,EAAAsC,SAAA,KACG,CAAC,IAAK,uBAAuBpC,IAAI,SAAA6G,GAAI,OACpChH,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CACEC,OAAK,EACL7G,IAAK2G,EACLA,KAAMA,EACNG,UAAWpH,MAIfC,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CAAOD,KAAK,aAAaG,UAAWpG,IACpCf,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CAAOD,KAAK,cAAcG,UAAWpG,IACrCf,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CAAOD,KAAK,YAAYG,UAAWpG,gDAMzC,OACIf,EAAAC,EAAAf,cAAAc,EAAAC,EAAAsC,SAAA,KACG,CAAC,IAAK,uBAAuBpC,IAAI,SAAA6G,GAAI,OACpChH,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CACEC,OAAK,EACL7G,IAAK2G,EACLA,KAAMA,EACNG,UAAW5F,MAGfvB,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CAAOD,KAAK,aAAaG,UAAW1F,IACpCzB,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CAAOD,KAAK,cAAcG,UAAW3E,IACrCxC,EAAAC,EAAAf,cAAC+H,EAAA,EAAD,CAAOD,KAAK,YAAYG,UAAWC,sCAMzC,IAAMpD,EAAQ,CACZxE,MAAOmD,KAAKS,MAAM5D,MAClBU,QAASyC,KAAKS,MAAMlD,QACpBkC,WAAYO,KAAKwD,iBACjBjE,UAAWS,KAAK4D,gBAChBpE,QAASQ,KAAKyD,eAGhB,OACEpG,EAAAC,EAAAf,cAACmI,EAAD,KAEErH,EAAAC,EAAAf,cAAC0G,EAAe0B,SAAhB,CAAyBtD,MAAOA,GAE9BhE,EAAAC,EAAAf,cAAA,OAAKN,UAAU,OAEboB,EAAAC,EAAAf,cAAA,OAAKN,UAAU,YACZ+D,KAAK4E,mBAGRvH,EAAAC,EAAAf,cAAA,UAAQN,UAAU,eAChBoB,EAAAC,EAAAf,cAAA,UACEc,EAAAC,EAAAf,cAACyB,EAAA,EAAD,CAAMH,GAAG,KAAT,WAGC,IACDR,EAAAC,EAAAf,cAAC2B,EAAA,EAAD,CAAiBC,KAAK,mBAI1Bd,EAAAC,EAAAf,cAAA,QAAMN,UAAU,aACb+D,KAAK6E,8BAxHJ9B,aCNlB+B,IAAQC,IAAIC,IAAQC,IAAeC,IAAYC,KAE/CC,IAASC,OACPhI,EAAAC,EAAAf,cAAC+I,EAAA,EAAD,KACEjI,EAAAC,EAAAf,cAACgJ,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.5167f727.chunk.js","sourcesContent":["module.exports = {\n  PORT: process.env.PORT || 8000,\n  NODE_ENV: process.env.NODE_ENV || 'development',\n  API_TOKEN: process.env.API_TOKEN || '82ec702e-81ae-4bd3-bb15-a26cff58bd43',\n  API_ENDPOINT:process.env.API_ENDPOINT || 'https://fierce-taiga-41664.herokuapp.com/',\n}\n","import React from 'react'\nimport './CircleButton.css'\n\nexport default function NavCircleButton(props) {\n  const { tag, className, childrenm, ...otherProps } = props\n\n  return React.createElement(\n    props.tag,\n    {\n      className: ['NavCircleButton', props.className].join(' '),\n      ...otherProps\n    },\n    props.children\n  )\n}\n\nNavCircleButton.defaultProps ={\n  tag: 'a',\n}\n","\nexport const findFolder = (folders=[], folderId) =>\n  folders.find(folder => folder.id === folderId)\n\nexport const findNote = (notes=[], noteId) =>\n  notes.find(note => note.id === noteId)\n\nexport const getNotesForFolder = (notes=[], folderId) => (\n  (!folderId)\n    ? notes\n    : notes.filter(note => note.folderId === folderId)\n)\n\nexport const countNotesForFolder = (notes=[], folderId) =>\n  notes.filter(note => note.folderId === folderId).length\n","import React from 'react'\nimport { NavLink, Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport { countNotesForFolder } from '../notes-helpers'\nimport './NoteListNav.css'\n\nexport default function NoteListNav(props) {\n  return (\n    <div className='NoteListNav'>\n      <ul className='NoteListNav__list'>\n        {props.folders.map(folder =>\n          <li key={folder.id}>\n            <NavLink\n              className='NoteListNav__folder-link'\n              to={`/folder/${folder.id}`}\n            >\n              <span className='NoteListNav__num-notes'>\n                {countNotesForFolder(props.notes, folder.id)}\n              </span>\n              {folder.name}\n            </NavLink>\n          </li>\n        )}\n      </ul>\n      <div className='NoteListNav__button-wrapper'>\n        <CircleButton\n          tag={Link}\n          to='/add-folder'\n          type='button'\n          className='NoteListNav__add-folder-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Folder\n        </CircleButton>\n      </div>\n    </div>\n  )\n}\n\nNoteListNav.defaultProps = {\n  folders: []\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NotePageNav.css'\n\nexport default function NotePageNav(props) {\n  return (\n    <div className='NotePageNav'>\n      <CircleButton\n        tag='button'\n        role='link'\n        onClick={() => props.history.goBack()}\n        className='NotePageNav__back-button'\n      >\n        <FontAwesomeIcon icon='chevron-left' />\n        <br />\n        Back\n      </CircleButton>\n      {props.folder && (\n        <h3 className='NotePageNav__folder-name'>\n          {props.folder.name}\n        </h3>\n      )}\n    </div>\n  )\n}\n\nNotePageNav.defaultProps = {\n  history: {\n    goBack: () => {}\n  }\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './Note.css'\n\nexport default function Note(props) {\n  return (\n    <div className='Note'>\n      <h2 className='Note__title'>\n        <Link to={`/note/${props.id}`}>\n          {props.name}\n        </Link>\n      </h2>\n      <button className='Note__delete' type='button'>\n        <FontAwesomeIcon icon='trash-alt' />\n        {' '}\n        remove\n      </button>\n      <div className='Note__dates'>\n        <div className='Note__dates-modified'>\n          Modified\n          {' '}\n          <span className='Date'>\n            {format(props.modified, 'Do MMM YYYY')}\n          </span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport Note from '../Note/Note'\nimport CircleButton from '../CircleButton/CircleButton'\nimport './NoteListMain.css'\n\nexport default function NoteListMain(props) {\n  return (\n    <section className='NoteListMain'>\n      <ul>\n        {props.notes.map(note =>\n          <li key={note.id}>\n            <Note\n              id={note.id}\n              name={note.name}\n              modified={note.modified}\n            />\n          </li>\n        )}\n      </ul>\n      <div className='NoteListMain__button-container'>\n        <CircleButton\n          tag={Link}\n          to='/add-note'\n          type='button'\n          className='NoteListMain__add-note-button'\n        >\n          <FontAwesomeIcon icon='plus' />\n          <br />\n          Note\n        </CircleButton>\n      </div>\n    </section>\n  )\n}\n\nNoteListMain.defaultProps = {\n  notes: [],\n}\n","import React from 'react'\nimport Note from '../Note/Note'\nimport './NotePageMain.css'\n\nexport default function NotePageMain(props) {\n  return (\n    <section className='NotePageMain'>\n      <Note\n        id={props.note.id}\n        name={props.note.name}\n        modified={props.note.modified}\n      />\n      <div className='NotePageMain__content'>\n        {props.note.content.split(/\\n \\r|\\n/).map((para, i) =>\n          <p key={i}>{para}</p>\n        )}\n      </div>\n    </section>\n  )\n}\n\nNotePageMain.defaultProps = {\n  note: {\n    content: '',\n  }\n}\n","import React from 'react'\nimport './NotefulForm.css'\n\nexport default function NotefulForm(props) {\n  const { className, ...otherProps } = props\n  return (\n    <form\n      className={['Noteful-form', className].join(' ')}\n      action='#'\n      {...otherProps}\n    />\n  )\n}\n","import React from 'react';\n\nexport default React.createContext({\n    notes: [],\n    folders: [],\n    addFolder: () => {},\n    addNote: () => {},\n    deleteNote: () => {}\n});","import React from 'react';\n\nexport default function ValidationError(props) {\n  if (props.message) {\n    return (\n      <div className=\"error\">\n      {props.message}\n      </div>\n    );\n  }\n\n  return (\n    <></>\n  );\n}","import React, {Component} from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm.js';\nimport notefulContext from '../notefulContext';\nimport config from '../config';\nimport ValidationError from '../Validation Error';\nimport './AddFolder.css';\n\nexport default class AddFolder extends Component {\n   static defaultProps = {\n       history: {\n           push: () => {}\n       },\n   };\n   \n    constructor(props) {\n       super(props);\n       this.state = {\n           name: \"\",\n           validName: false,\n           validForm: false,\n           validationMessages: {\n               name: ''\n           }\n       };\n   };\n\n   static contextType = notefulContext;\n   \n   updateFolderName = (name) => {\n       this.setState({name}, () => {this.validateName(name)})\n   }\n\n   validateName = (folderName) => {\n    const errorInfo = {...this.state.validationMessages};\n    let hasError = false;\n\n    folderName = folderName.trim();\n        if (folderName.length === 0) {\n        errorInfo.name = 'Please enter a name for the folder.';\n        hasError = true;\n        } \n        else {\n            if (folderName.length < 3) {\n                errorInfo.name = 'Please enter a name that is at least 3 characters long.';\n                hasError = true;\n            } \n            else {\n                errorInfo.name = '';\n                hasError = false;\n            }\n        }\n\n        this.setState({\n            validationMessages: errorInfo,\n            validName: !hasError\n            },\n            this.validateForm);\n    }\n\n    validateForm = () => {\n        this.setState({\n            validForm: this.state.validName\n        });\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        \n        const folder = {\n            folder_name: e.target['folder-name-input'].value\n        };\n\n        fetch(`${config.API_ENDPOINT}/folders`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json'\n            },\n            body: JSON.stringify(folder),\n        })\n        .then (res => {\n            if (!res.ok) {\n                return res.json().then(e => Promise.reject(e))\n            }\n            return res.json();\n        })\n        .then (folder => {\n            this.context.addFolder(folder);\n            this.props.history.push(`/folders/${folder.id}`)\n        })\n        .catch (err => alert(err));\n    };\n    \n\n    render () {\n        return (\n                    <section className='AddFolder'>\n                        <h2>\n                            Create a New Folder:\n                        </h2>\n\n                        <NotefulForm onSubmit={this.handleSubmit}>\n                        \n                            <div className=\"field\">\n\n                                <label htmlFor=\"folder-name-input\">\n                                    Name\n                                </label>\n\n                                <input type=\"text\" id=\"folder-name-input\" onChange={e => this.updateFolderName(e.target.value)}/>\n                                <ValidationError hasError={!this.state.validName} message={this.state.validationMessages.name}/>\n\n                            </div>\n\n                            <div className=\"buttons\">\n\n                                <button type=\"submit\" disabled={!this.state.validForm}>\n                                    Add Folder \n                                </button>\n\n                            </div>\n\n                        </NotefulForm>\n                    </section>\n        );\n    }\n}","import React, {Component} from 'react';\n\nexport default class ErrorHandler extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return {hasError: true}\n    }\n\n    render () {\n        if (this.state.hasError) {\n            return (\n                <main className=\"error-page\">\n                    <h1>\n                        We're sorry! An error occurred. Please try again later.\n                    </h1>\n                </main>\n            );\n        }\n        return this.props.children;\n    }\n}","import React, {Component} from 'react';\nimport {Route, Link} from 'react-router-dom';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddNote from '../AddFolder/AddFolder';\nimport AddFolder from '../AddFolder/AddFolder';\nimport notefulContext from '../notefulContext';\n// import {getNotesForFolder, findNote, findFolder} from '../notes-helpers';\nimport config from '../config'\nimport ErrorHandler from '../ErrorHandler';\n\nimport './App.css';\n\nconsole.log(process.env.REACT_APP_API_KEY)\nclass App extends Component {\n    state = {\n      notes: [],\n      folders: []\n    };\n  \n    componentDidMount() {\n      Promise.all([\n        fetch(`${config.API_ENDPOINT}/notes`),\n        fetch(`${config.API_ENDPOINT}/folders`)\n      ])\n      .then(([notesRes, foldersRes]) => {\n        if (!notesRes.ok) {\n          return notesRes.json().then(e => Promise.reject(e));\n        }\n        if (!foldersRes.ok) {\n          return foldersRes.json().then(e => Promise.reject(e));\n        }\n        return Promise.all([notesRes.json(), foldersRes.json()]);\n      })\n      .then(([notes, folders]) => {\n        this.setState({notes, folders});\n      })\n      .catch(error => {\n        console.error({error});\n      });\n    }\n  \n    handleDeleteNote = id => {\n      this.setState({\n        notes: this.state.notes.filter(note => note.id !== id)\n      });\n    }\n  \n    handleAddNote = (addedNote) => {\n      this.setState({\n        notes: [\n          ...this.state.notes,\n          addedNote\n        ]\n      });\n    }\n  \n    handleAddFolder = (folder) => {\n      this.setState({\n        folders: [\n          ...this.state.folders,\n          folder\n        ]\n      });\n    }\n  \n    renderNavRoutes() {\n      return (\n          <>\n            {['/', '/folders/:folder_id'].map(path => (\n              <Route\n                exact\n                key={path}\n                path={path}\n                component={NoteListNav}\n              />\n            ))}\n  \n            <Route path=\"/notes/:id\" component={NotePageNav}/>\n            <Route path=\"/add-folder\" component={NotePageNav}/>\n            <Route path=\"/add-note\" component={NotePageNav}/>\n          </>\n      );\n    }\n  \n    renderMainRoutes() {\n      return (\n          <>\n            {['/', '/folders/:folder_id'].map(path => (\n              <Route\n                exact \n                key={path}\n                path={path}\n                component={NoteListMain}/>\n            ))}\n  \n            <Route path=\"/notes/:id\" component={NotePageMain}/>\n            <Route path=\"/add-folder\" component={AddFolder}/>\n            <Route path=\"/add-note\" component={AddNote}/>\n          </>\n      );\n    }\n  \n    render() {\n      const value = {\n        notes: this.state.notes,\n        folders: this.state.folders,\n        deleteNote: this.handleDeleteNote,\n        addFolder: this.handleAddFolder,\n        addNote: this.handleAddNote\n      };\n      \n      return (\n        <ErrorHandler>\n  \n          <notefulContext.Provider value={value}>\n            \n            <div className=\"App\">\n            \n              <nav className=\"App__nav\">\n                {this.renderNavRoutes()}\n              </nav>\n  \n              <header className=\"App__header\">\n                <h1>\n                  <Link to=\"/\">\n                    Noteful\n                  </Link>\n                  {' '}\n                  <FontAwesomeIcon icon=\"check-double\"/>\n                </h1>\n              </header>\n  \n              <main className=\"App__main\">\n                {this.renderMainRoutes()}\n            </main>\n          \n            </div>\n          </notefulContext.Provider>\n  \n        </ErrorHandler>\n      );\n    }\n  }\n  \n  export default App;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\n} from '@fortawesome/free-solid-svg-icons'\nimport { BrowserRouter } from 'react-router-dom'\nimport 'typeface-roboto'\nimport './index.css'\nimport App from './App/App'\n\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}